#
# This workflow is triggered by a comment on a PR and runs the synthetics stack e2e tests
# It is responsible for setting the status check `synthetics-stack-e2e` to success or failure,
# which was set to failure by the synthetics-stack-e2e-init.yml workflow.
#
---
name: synthetics # This name needs to be the same as in synthetic-stack-e2e-init.yml

on:
  issue_comment:
    types:
      - created
  pull_request_target:
    paths:
      - "x-pack/plugins/synthetics/**"

jobs:
  init-synthetics-stack-e2e:
    if: github.event.pull_request
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - name: Create commit status
        uses: actions/github-script@v6
        env:
          SHA: ${{ github.event.pull_request.head.sha }}
        with:
          script: |
            const { owner, repo } = context.repo;
            github.rest.repos.createCommitStatus({
              owner,
              repo,
              context: "synthetics-stack-e2e",
              sha: process.env.SHA,
              state: 'failure',
              description: "Comment \"/synthetics-stack-e2e\" to run the synthetics stack e2e tests",
            });
  trigger-synthetics-stack-e2e:
    if: github.event.comment && github.event.issue.pull_request && startsWith(github.event.comment.body, '/synthetics-stack-e2e')
    runs-on: ubuntu-latest
    env:
      RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}?pr=${{ github.event.issue.number }}
    permissions:
      statuses: write
      pull-requests: write
    steps:
      - name: Get PR head SHA
        id: get-pr-head-sha
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { owner, repo } = context.repo;
            const pull = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: context.issue.number,
            });
            return pull.data.head.sha;
      - name: Create commit status
        uses: actions/github-script@v6
        env:
          SHA: ${{ steps.get-pr-head-sha.outputs.result }}
          JOB_STATUS: ${{ job.status }}
        with:
          script: |
            const { owner, repo } = context.repo;
            github.rest.repos.createCommitStatus({
              owner,
              repo,
              context: "synthetics-stack-e2e",
              sha: process.env.SHA,
              state: 'pending',
              description: "Running synthetics-stack-e2e",
              target_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            });
      - uses: reakaleek/apm-pipeline-library/.github/actions/run-synthetics-stack-e2e@feature/synthetics-stack-e2e-action
        with:
          vault-url: ${{ secrets.OBLT_VAULT_ADDR }}
          vault-role-id: ${{ secrets.OBLT_VAULT_ROLE_ID }}
          vault-secret-id: ${{ secrets.OBLT_VAULT_SECRET_ID }}
      - if: always()
        name: Create commit status
        uses: actions/github-script@v6
        env:
          SHA: ${{ steps.get-pr-head-sha.outputs.result }}
          JOB_STATUS: ${{ job.status }}
        with:
          script: |
            const { owner, repo } = context.repo;
            github.rest.repos.createCommitStatus({
              owner,
              repo,
              context: "synthetics-stack-e2e",
              sha: process.env.SHA,
              state: process.env.JOB_STATUS == 'success' ? 'success' : 'failure',
              description: process.env.JOB_STATUS == 'success' ? "The synthetics-stack-e2e tests succeeded" : "synthetics-stack-e2e tests failed",
              target_url: process.env.RUN_URL,
            });
